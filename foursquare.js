// Generated by CoffeeScript 1.6.3
(function() {
  var Foursquare, getFoursquareData, healthyCategories, session, setSession, unhealthyCategories;

  Foursquare = require("temboo/Library/Foursquare/Users");

  session = null;

  setSession = function(s) {
    return session = s;
  };

  healthyCategories = ["Gym", "Field"];

  unhealthyCategories = ["Restaurants", "Sports Bar"];

  getFoursquareData = function(callback, renderPage) {
    var checkinsByUserChoreo, checkinsByUserInputs, healthy, healthyPoints, netPoints, neutral, unhealthy, unhealthyPoints;
    healthy = [];
    healthyPoints = 0;
    unhealthy = [];
    unhealthyPoints = 0;
    neutral = [];
    netPoints = 0;
    checkinsByUserChoreo = new Foursquare.CheckinsByUser(session);
    checkinsByUserInputs = checkinsByUserChoreo.newInputSet();
    checkinsByUserInputs.setCredential('Foursquare');
    return checkinsByUserChoreo.execute(checkinsByUserInputs, (function(results) {
      var categorizeVenue, checkIfHealthy, checkIfUnhealthy, checkinsData, data, item, items, pointsClass, _i, _len;
      checkIfHealthy = function(category) {
        var healthyCategory, _i, _len;
        for (_i = 0, _len = healthyCategories.length; _i < _len; _i++) {
          healthyCategory = healthyCategories[_i];
          if (category.name.indexOf(healthyCategory) !== -1) {
            return true;
          }
        }
        return false;
      };
      checkIfUnhealthy = function(category) {
        var unhealthyCategory, _i, _len;
        for (_i = 0, _len = unhealthyCategories.length; _i < _len; _i++) {
          unhealthyCategory = unhealthyCategories[_i];
          if (category.name.indexOf(unhealthyCategory) !== -1) {
            return true;
          }
        }
        return false;
      };
      categorizeVenue = function(venue) {
        var isHealthy, isUnhealthy;
        if (venue.categories[0]) {
          isHealthy = checkIfHealthy(venue.categories[0]);
          isUnhealthy = checkIfUnhealthy(venue.categories[0]);
          if (!!isHealthy) {
            healthy.push(venue.name);
          }
          if (!!isUnhealthy) {
            unhealthy.push(venue.name);
          }
          if (!(isHealthy || isUnhealthy)) {
            return neutral.push(venue.name);
          }
        }
      };
      checkinsData = JSON.parse(results.get_Response());
      items = checkinsData.response.checkins.items;
      for (_i = 0, _len = items.length; _i < _len; _i++) {
        item = items[_i];
        categorizeVenue(item.venue);
      }
      healthyPoints = healthy.length;
      unhealthyPoints = unhealthy.length;
      netPoints = healthyPoints - unhealthyPoints;
      pointsClass = (netPoints >= 0 ? "positive-points" : "negative-points");
      data = {
        checkinsData: checkinsData,
        healthy: healthy,
        healthyPoints: healthyPoints,
        unhealthy: unhealthy,
        unhealthyPoints: unhealthyPoints,
        neutral: neutral,
        netPoints: netPoints,
        pointsClass: pointsClass
      };
      if (renderPage) {
        return callback.render(renderPage, data);
      } else {
        return callback(null, data);
      }
    }), function(error) {
      return console.log(error.type);
    });
  };

  module.exports = {
    setSession: setSession,
    getFoursquareData: getFoursquareData
  };

}).call(this);
